- name: Setup Bigben
  hosts: all
  vars:
    nginx_conf: "{{ playbook_dir }}/../nginx/bigben.nginx.conf"
  vars_files:
    - vars/main.yml
    - vars/custom.yml
  tasks:
    - name: Set up system as root
      become: true
      block:
        - name: Add bigben user
          ansible.builtin.user:
            name: bigben
            state: present
            system: true

        - name: Import NodeSource GPG key
          ansible.builtin.apt_key:
            url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
            state: present

        - name: Add NodeSource repository
          ansible.builtin.apt_repository:
            repo: "deb https://deb.nodesource.com/node_{{ node_version }}.x {{ ansible_distribution_release }} main"
            state: present
            update_cache: true

        - name: Install Node.js and nginx
          ansible.builtin.apt:
            name: "{{ item }}"
            state: present
            update_cache: true
          loop:
            - nodejs
            - git
            - nginx

        - name: Create Bigben Directory
          ansible.builtin.file:
            path: "/opt/bigben"
            state: directory
            owner: bigben
            group: bigben
            mode: "0750"

        - name: Copy BigBen Nginx Config
          ansible.builtin.copy:
            src: "{{ nginx_conf }}"
            dest: "/etc/nginx/sites-available/bigben"
            owner: root
            group: root
            mode: "0644"

        - name: Start Nginx
          ansible.builtin.service:
            name: nginx
            state: started
            enabled: true

        - name: Install pm2
          community.general.npm:
            name: pm2
            global: true
            state: present

    - name: Set up system as bigben
      become: true
      become_user: bigben
      block:
        - name: Clone Bigben
          ansible.builtin.git:
            repo: "https://github.com/Glizzus/discord-bigben.git"
            version: main
            dest: "/opt/bigben"
            update: true

        - name: Install Bigben dependencies
          community.general.npm:
            path: "/opt/bigben/bigben"
            state: present
            ci: true

        - name: Build With Typescript
          ansible.builtin.command:
            cmd: "npm run build"
          changed_when: false
          args:
            chdir: "/opt/bigben/bigben"

        - name: Check if Application is Started with pm2
          ansible.builtin.shell:
            cmd: |
              set -o pipefail
              pm2 list | grep -q 'bigben'
            executable: /bin/bash
          register: pm2_status
          changed_when: false
          failed_when: pm2_status.rc not in [0, 1]

        - name: Start Application with PM2
          ansible.builtin.command:
            cmd: "pm2 start -f dist/index.js --name 'bigben'"
          args:
            chdir: "/opt/bigben/bigben"
          # If grep finds nothing, pm2_status.rc will be 1
          when: pm2_status.rc == 1
          changed_when: true
          environment:
            NODE_ENV: production
            BIGBEN_PORT: "{{ bigben_port }}"
            BIGBEN_TOKEN: "{{ bigben_token }}"
            BIGBEN_CLIENT_ID: "{{ bigben_client_id }}"
            BIGBEN_MARIADB_URI: "{{ bigben_mariadb_uri }}"

        - name: Restart Application with PM2
          ansible.builtin.command:
            cmd: "pm2 restart bigben --update-env"
          args:
            chdir: "/opt/bigben/bigben"
          # If grep finds bigben in pm2, pm2_status.rc will be 0
          when: pm2_status.rc == 0
          changed_when: true
          environment:
            NODE_ENV: production
            BIGBEN_PORT: "{{ bigben_port }}"
            BIGBEN_TOKEN: "{{ bigben_token }}"
            BIGBEN_CLIENT_ID: "{{ bigben_client_id }}"
            BIGBEN_MARIADB_URI: "{{ bigben_mariadb_uri }}"
